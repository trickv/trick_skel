#!/usr/bin/env perl

use warnings;

my $mintelUsProxyCommand = "connect -S localhost:3129 %h %p";

# general use stuff
my %hosts = (
    '*' => {
        'ForwardX11' => 'yes'},
    'svn.gnome.org' => {
        'IdentityFile' => '~/.ssh/trickv@gnome.org/id_rsa',
        'User' => 'trickv'},
    'lish' => {
        'HostName' => 'lish.v9n.us',
        'User' => 'trickv'}
);

open (FILE, "optional/mintel_hosts") or die("Failed to open optional/mintel_hosts");
my @mintelHosts = <FILE>;
close (FILE);
chomp @mintelHosts;

# Now for the fun stuff:
# Take every possible jail name that I might want to SSH to...
# And add a host line for it :)
my @mintelHostPrefixes = ( "dev-", "test-", "" );
my @mintelHostNames = ( "survey", "fedex", "pepsi", "iron" );
my @mintelHostSuffixes = ( "db", "app", "analysis" );
for ($i = 1; $i < 20; $i++) {
    foreach $prefix (@mintelHostPrefixes) {
        foreach $name (@mintelHostNames) {
            foreach $suffix (@mintelHostSuffixes) {
                $host = sprintf("%s%s-%s%02d", $prefix, $name, $suffix, $i);
                push @mintelHosts, $host;
            }
        }
    }
}

$hostname = `hostname`;
$hostname =~ s/\s+$//g;
my ($sec, $min, $hour, $mday, $mon, $year, $wday, $yday, $isdst) = localtime();
printf "# ssh config generated for $hostname at %4d-%02d-%02d %02d:%02d:%02d\n\n",
    $year + 1900, $mon + 1, $mday, $hour, $min, $sec;

# global stuff
print "# global settings\n";
print "EscapeChar ^s\n\n";
print "StrictHostKeyChecking no\n\n";

# special cases for home boxen
if ($hostname =~ /(?:mc|ed).home.vanstaveren.us/ or $hostname =~ /^ss$/) {
    my $mintelHostString;
    foreach $cur (@mintelHosts) {
        $hosts{$cur} = {'User' => 'pv'};
    }

    $hosts{'atlas'} = {
        'HostName' => 'atlas.home.vanstaveren.us',
        'User' => 'pv' };
    $hosts{'atlas.home.vanstaveren.us'} = {
        'User' => 'pv' };
}

# special cases for atlas
if ($hostname =~ /atlas/) {
    for my $host ( keys %hosts ) {
        $hosts{$host}{'ProxyCommand'} = $mintelUsProxyCommand;
    }
}

# Read the hosts hash and output in a somewhat-standard format
print "# per-host settings\n";
while ( my ($hostname, $properties) = each(%hosts) ) {
    if ($hostname =~ /^$/) {
        $hostname = 'ERROR';
    }
    print "Host $hostname\n";
    while ( my ($property, $value) = each(%$properties) ) {
        if ($value =~ /^$/) {
            $value = 'ERROR';
        }
        print "    $property $value\n";
    }
}

