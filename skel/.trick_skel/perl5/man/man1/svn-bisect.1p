.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SVN-BISECT 1p"
.TH SVN-BISECT 1p "2009-12-04" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
svn\-bisect
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 6
\&    $ svn\-bisect \-\-min 25000 \-\-max 26000 start
\&    $ svn\-bisect bad
\&    $ svn\-bisect bad
\&    $ svn\-bisect good
\&    [etc etc]
\&    $ svn\-bisect reset
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This tool's purpose is to help you determine which revision of a subversion
repository contains a change.  It does this by employing a binary search.
It will manage the current revision of your checkout directory, and narrow
in on the target revision, as you give it clues about the current revision
such as \*(L"before\*(R" (this revision is before the one you want) or \*(L"after\*(R" (this
revision is after the one you want).
.PP
Start a bisect session with the \*(L"start\*(R" command.  Then, walk the binary tree
by using the \*(L"before\*(R" and \*(L"after\*(R" commands.  When you are done, the tool will
tell you the target revision.
.PP
The most common usage scenario is finding out which rev a bug was introduced
in.  For this purpose, some command aliases have been added: if the current
revision contains the bug, you can use the \*(L"bad\*(R" command (meaning, this
revision is \*(L"after\*(R" the change you want to find), otherwise use the \*(L"good\*(R" 
command (meaning, this revision is \*(L"before\*(R" the change you want to find).
.PP
All commands should be run from within a subversion checkout directory.  After
a \*(L"svn-bisect start\*(R", all subsequent svn-bisect commands need to be run from
that same directory.
.SH "OPTIONS"
.IX Header "OPTIONS"
Options \s-1MUST\s0 be specified before subcommands, on the command line.  Options
specified after the subcommand will be passed to the subcommand; this is
currently only useful for the \*(L"run\*(R" subcommand.
.IP "\-\-help" 4
.IX Item "--help"
Use anywhere.  Output a command list, or specific help for the given command.
.IP "\-\-version" 4
.IX Item "--version"
Use anywhere.  Tells you my version number.
.IP "\-\-verbose" 4
.IX Item "--verbose"
Use anywhere.  Enable some additional informational output.
.IP "\-\-min" 4
.IX Item "--min"
Use with \*(L"start\*(R".  Specify the beginning revision of the range.
.IP "\-\-max" 4
.IX Item "--max"
Use with \*(L"start\*(R".  Specify the ending revision of the range.
.IP "\-\-back" 4
.IX Item "--back"
Use with \*(L"reset\*(R".  Restores the original repository version.
.SH "SUBCOMMANDS"
.IX Header "SUBCOMMANDS"
.SS "start"
.IX Subsection "start"
.Vb 1
\&    svn\-bisect [\-\-min M] [\-\-max N] start
.Ve
.PP
Start a new bisect session.  If \-\-min isn't specified, you can specify it later
with the \*(L"good\*(R" command.  If \-\-max isn't specified, you can specify it later
with the \*(L"bad\*(R" command.
.SS "after"
.IX Subsection "after"
.Vb 2
\&    svn\-bisect after [revision]
\&    or: svn\-bisect bad [revision]
.Ve
.PP
Inform svn-bisect that the specified revision is *after* the change we're
looking for.  If you don't specify a revision number, the current revision of
the working tree is used.  If you are looking for the rev which introduced a bug
(which is the common case), the alias \*(L"bad\*(R" might be easier to remember.
.SS "before"
.IX Subsection "before"
.Vb 2
\&    svn\-bisect before [revision]
\&    or: svn\-bisect good [revision]
.Ve
.PP
Inform svn-bisect that the specified revision is *before* the change we're
looking for.  If you don't specify a revision number, the current revision of
the working tree is used.  If you are looking for the rev which introduced a bug
(which is the common case), the alias \*(L"good\*(R" might be easier to remember.
.SS "skip"
.IX Subsection "skip"
.Vb 1
\&    svn\-bisect skip [<rev> [<rev>...]]
.Ve
.PP
Tell svn-bisect to skip the specified revision.  If no revision is specified,
the current version of the working tree is used.  Do this if you can't determine
whether the current revision is bad or good, if, for instance, some other
issue prevents it from compiling successfully.
.PP
You may specify more than one revision, and they will all be skipped.
.SS "unskip"
.IX Subsection "unskip"
.Vb 1
\&    svn\-bisect unskip <rev> [<rev>...]
.Ve
.PP
Tell svn-bisect to no longer skip the specified revision.  You must specify
at least one revision to unskip.  If you specify more than one, they will
all be unskipped.
.SS "run"
.IX Subsection "run"
.Vb 1
\&    svn\-bisect run <command> [arguments...]
.Ve
.PP
Runs a command repeatedly to automate the bisection process.
.PP
Examples:
.PP
.Vb 2
\&    svn\-bisect run ./mytest.sh
\&    svn\-bisect run test ! \-f file
.Ve
.PP
We run the command and arguments until a conclusion is reached.  The
command (usually a shell script) tells us about the current revision
by way of its return code.  The following return codes are handled:
.PP
.Vb 4
\&    0: This revision is before the change we\*(Aqre looking for
\&    1\-124, 126\-127: This revision includes the change we\*(Aqre looking for
\&    125: This revision is untestable and should be skipped
\&    any other value: The command failed to run, abort bisection.
.Ve
.PP
In other words, \*(L"run\*(R" will automatically find the last revision for
which the given command returns success.  (Keep in mind that in the
shell, \*(L"0\*(R" means \*(L"success\*(R".)
.PP
The normal caveats apply.  In particular, if your script makes any
changes, don't forget to clean up afterwards.
.SS "reset"
.IX Subsection "reset"
.Vb 1
\&    svn\-bisect reset
.Ve
.PP
Clean up after a bisect, and return the repository to the revision it was at
before you started.
.SS "help"
.IX Subsection "help"
.Vb 2
\&    svn\-bisect help
\&    svn\-bisect help start
.Ve
.PP
Gives you some useful descriptions and usage information.
.SH "EXAMPLE"
.IX Header "EXAMPLE"
\&...Because, you know, no software documentation is complete without a flashy
screenshot, these days.
.PP
So, lets say you were wondering when the subversion project added the
\&\*(L"Last Changed Rev:\*(R" line to the output of \*(L"svn info\*(R".  Determining the
existence of this change is a straightforward matter of searching for the
text string... if a result was found, the current revision is \*(L"after\*(R",
otherwise it was \*(L"before\*(R".  So a bisect looks like this:
.PP
.Vb 3
\&    $ svn co http://svn.collab.net/repos/svn/trunk/subversion
\&    [snip lots of svn checkout spam]
\&    Checked out revision 30958.
\&    
\&    $ cd subversion
\&    
\&    $ ack \-\-nocolor \-\-nogroup \*(AqLast Changed Rev\*(Aq
\&    svn/info\-cmd.c:351:    SVN_ERR(svn_cmdline_printf(pool, _("Last Changed Rev: %ld\en"),
\&    
\&    $ date
\&    Fri May  2 12:52:20 PDT 2008
\&    
\&    $ svn\-bisect start
\&    $ svn\-bisect before 0
\&    $ svn\-bisect after
\&    There are 13853 revs left in the pool.  Choosing r15480.
\&    
\&    $ ack \-\-nocolor \-\-nogroup \*(AqLast Changed Rev\*(Aq
\&    clients/cmdline/info\-cmd.c:137:    SVN_ERR (svn_cmdline_printf (pool, _("Last Changed Rev: %ld\en"),
\&    
\&    $ svn\-bisect after
\&    There are 6926 revs left in the pool.  Choosing r6010.
\&    
\&    $ ack \-\-nocolor \-\-nogroup \*(AqLast Changed Rev\*(Aq
\&    clients/cmdline/info\-cmd.c:158:    printf ("Last Changed Rev: %" SVN_REVNUM_T_FMT "\en", entry\->cmt_rev);
\&    
\&    $ svn\-bisect after
\&    There are 3463 revs left in the pool.  Choosing r2481.
\&    
\&    $ ack \-\-nocolor \-\-nogroup \*(AqLast Changed Rev\*(Aq
\&    clients/cmdline/info\-cmd.c:153:    printf ("Last Changed Rev: %" SVN_REVNUM_T_FMT "\en", entry\->cmt_rev);
\&    
\&    $ svn\-bisect after
\&    There are 1731 revs left in the pool.  Choosing r1168.
\&    
\&    $ ack \-\-nocolor \-\-nogroup \*(AqLast Changed Rev\*(Aq
\&    
\&    $ svn\-bisect before
\&    There are 865 revs left in the pool.  Choosing r1800.
\&    
\&    $ ack \-\-nocolor \-\-nogroup \*(AqLast Changed Rev\*(Aq
\&    
\&    $ svn\-bisect before
\&    There are 432 revs left in the pool.  Choosing r2127.
\&    
\&    $ ack \-\-nocolor \-\-nogroup \*(AqLast Changed Rev\*(Aq
\&    clients/cmdline/info\-cmd.c:161:        printf ("Last Changed Rev: %" SVN_REVNUM_T_FMT "\en", entry\->cmt_rev);
\&    
\&    $ svn\-bisect after
\&    There are 216 revs left in the pool.  Choosing r1961.
\&    
\&    $ ack \-\-nocolor \-\-nogroup \*(AqLast Changed Rev\*(Aq
\&    clients/cmdline/info\-cmd.c:161:        printf ("Last Changed Rev: %" SVN_REVNUM_T_FMT "\en", entry\->cmt_rev);
\&    
\&    $ svn\-bisect after
\&    There are 108 revs left in the pool.  Choosing r1881.
\&    
\&    $ ack \-\-nocolor \-\-nogroup \*(AqLast Changed Rev\*(Aq
\&    clients/cmdline/info\-cmd.c:161:        printf ("Last Changed Rev: %" SVN_REVNUM_T_FMT "\en", entry\->cmt_rev);
\&    
\&    $ svn\-bisect after
\&    There are 54 revs left in the pool.  Choosing r1845.
\&    
\&    $ ack \-\-nocolor \-\-nogroup \*(AqLast Changed Rev\*(Aq
\&    clients/cmdline/info\-cmd.c:150:        printf ("Last Changed Rev: %ld\en", entry\->cmt_rev);
\&    
\&    $ svn\-bisect after
\&    There are 27 revs left in the pool.  Choosing r1827.
\&    
\&    $ ack \-\-nocolor \-\-nogroup \*(AqLast Changed Rev\*(Aq
\&    clients/cmdline/info\-cmd.c:150:        printf ("Last Changed Rev: %ld\en", entry\->cmt_rev);
\&    
\&    $ svn\-bisect after
\&    There are 13 revs left in the pool.  Choosing r1809.
\&    
\&    $ ack \-\-nocolor \-\-nogroup \*(AqLast Changed Rev\*(Aq
\&    clients/cmdline/info\-cmd.c:153:            printf ("Last Changed Rev: %ld\en", entry\->cmt_rev);
\&    
\&    $ svn\-bisect after
\&    There are 6 revs left in the pool.  Choosing r1806.
\&    
\&    $ ack \-\-nocolor \-\-nogroup \*(AqLast Changed Rev\*(Aq
\&    
\&    $ svn\-bisect before
\&    There are 2 revs left in the pool.  Choosing r1808.
\&    
\&    $ ack \-\-nocolor \-\-nogroup \*(AqLast Changed Rev\*(Aq
\&    
\&    $ svn\-bisect before
\&    This is the end of the road!  The change occurred in r1809.
\&    
\&    $ svn log \-r1809
\&    \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&    r1809 | rooneg | 2002\-04\-27 12:23:38 \-0700 (Sat, 27 Apr 2002) | 30 lines
\&    
\&    As requested by cmpilato in issue #676, add an \*(Aqsvn info\*(Aq command, which 
\&    prints out the contents of the svn_wc_entry_t for a given versioned resource.
\&    
\&    * CHANGES
\&      note the addition of the \*(Aqsvn info\*(Aq command.
\&    
\&    * subversion/clients/cmdline/cl.h
\&      add declaration for svn_cl_\|_info.
\&    
\&    * subversion/clients/cmdline/info\-cmd.c
\&      new file implementing the info command.
\&    
\&    * subversion/clients/cmdline/main.c
\&      hook up the info command.
\&    
\&    * subversion/clients/cmdline/man/svn.1
\&      document the info command.
\&    
\&    * subversion/tests/clients/cmdline/getopt_tests_data/svn\-\-help_stdout
\&      update for the addition of info command.
\&    
\&    * subversion/tests/clients/cmdline/getopt_tests_data/svn_help_stdout
\&      ditto.
\&    
\&    * subversion/tests/clients/cmdline/getopt_tests_data/svn_stderr
\&      ditto.
\&    
\&    * tools/dev/bash_completion
\&      add \*(Aqinfo\*(Aq to the tab completion.
\&    
\&    \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&    
\&    $ date
\&    Fri May  2 12:56:00 PDT 2008
.Ve
.PP
So, there it is.  In 4 minutes, we've learned that \*(L"Last Changed Rev:\*(R" has been
in there since the inception of the \*(L"svn info\*(R" command itself, back in 2002.
.SH "REQUIREMENTS"
.IX Header "REQUIREMENTS"
This tool requires:
.PP
* A computer
.PP
* A brain
.PP
* An installation of Perl, version 5.8 or above
.PP
* The IO::All module, installed from \s-1CPAN\s0
.PP
* The YAML::Syck module, installed from \s-1CPAN\s0
.PP
* The \*(L"svn\*(R" command somewhere in your \s-1PATH\s0, executable by the current user
.PP
* A svn checkout with some history to bisect.
.SH "AUTHOR"
.IX Header "AUTHOR"
.Vb 1
\&    Mark Glines <mark\-cpan@glines.org>
.Ve
.SH "REPOSITORY"
.IX Header "REPOSITORY"
Browser: <http://github.com/Infinoid/svn\-bisect/>
Clone: <git://github.com/Infinoid/svn\-bisect.git>
.SH "THANKS"
.IX Header "THANKS"
* Thanks to the git-bisect author(s), for coming up with a user interface that
  I actually like.
.PP
* Thanks to Will Coleda for inspiring me to actually write and release this.
.PP
* Thanks to the Parrot project for having so much random stuff going on as to
  make a tool like this necessary.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
App::SVNBinarySearch by Will Coleda: <http://search.cpan.org/dist/App\-SVNBinarySearch/>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2008 Mark Glines.
.PP
It is distributed under the terms of the Artistic License 2.0.  For details,
see the \*(L"\s-1LICENSE\s0\*(R" file packaged alongside this tool.
